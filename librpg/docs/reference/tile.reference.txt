###########
# tile.py #
###########

=======
Tileset
=======

A Tileset is the palette used to draw the lower layers of a Map. It is a set of Tiles.

-----
Usage
-----

The Map object will load the Tileset automatically when constructed, so typically this class does not have to be used directly.

----------
Attributes
----------

tiles: [Tile] (read-only)
Array of the Tiles that may be used to compose the layer.

size: int (read-only)
Number of tiles in the tileset.

image: Surface (read-only)
Surface with the whole tileset image.

image_file: string (read-only)
Name of the image file containing the tileset image.

boundaries_file: string (read-only)
Name of the .bnd file containing the attributes of each tile.

-------
Methods
-------

__init__(image_file: File, boundaries_file: File)
Loads the tileset from a bitmap and a csv.

get_surface() -> Surface
Returns a surface with the image as the tile should be drawn.


====
Tile
====

A Tile is a "color" used to draw the lower layers of a Map.

-----
Usage
-----

The Map object will use Tiles to blit the map and control movement restrictions, but this class will usually not be used directly by the programmer.

----------
Attributes
----------

image: TileImage (read-only)
An Image containing the image for that tile.

obstacle: int (read-only)
0 if a party or an object can move over this tile, 3 if they can move under it, 1 if it is considered an obstacle. If it is a counter - that is, if push key events may affect objects on the other side of it -, this attribute is set to 2.

open_directions: [bool] (read-only)
4-position array with boolean values indicating if the tile is enterable by the given side.

-------
Methods
-------

__init__(image: TileImage)
Creates a Tile with the specified image and blank attributes.

cannot_be_entered(direction: Direction) -> bool
Returns whether an object coming from the passes direction may enter the Tile.

is_counter() -> bool
Returns whether the tile is a counter - that is, if push key events may affect objects on the other side of it.

is_obstacle() -> bool
Returns whether the tile is an obstacle.

is_below() -> bool
Returns whether the tile is drawn below party level.

is_above() -> bool
Returns whether the tile is drawn above party level.
