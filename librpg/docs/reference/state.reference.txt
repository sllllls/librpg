############
# state.py #
############

=====
State
=====

The State class stores a save for a game. A State is composed of several local states, each identified uniquely by a feature string.

-----
Usage
-----

To save a file with data that the game wishes to be persistent, create a State and call save_local for each feature passing its feature string and a serializable object that contains all the data for loading that feature later. When the local_states are set, call save to write all local states to a file.

To load a data file, instantiate a State, call load to read the file and then use load_local to load the desired features.

----------
Attributes
----------

locals: {string->object} (read-only)
Maps feature strings to local states.

-------
Methods
-------

__init__()
Constructor.

load(filename: String)
Loads a state from a file that was previously saved with save().

save(filename: String)
Saves a state to a file.

load_local(feature: String) -> object
Gets the local state saved with the given feature string.

save_local(feature: String, local_state: object)
Saves 'local_state' as the local state assigned to 'feature'. 'local_state' must be serializable.
